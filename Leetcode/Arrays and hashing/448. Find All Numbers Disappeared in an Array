class Solution: # time complexity: O(n), space complexity: O(1)
    def findDisappearedNumbers(self, nums: list[int]) -> list[int]:
        s = set([i for i in range(1, len(nums)+1)])
        for n in nums:
            s.discard(n)
        return list(s)

class Solution: # time complexity: O(n), space complexity: O(1)
    def findDisappearedNumbers(self, nums: list[int]) -> list[int]:
        for n in nums:
            nums[abs(n)-1] = -abs(nums[abs(n)-1])
        res = []
        for i in range(len(nums)):
            if nums[i] > 0:
                res.append(i+1)
        return res
